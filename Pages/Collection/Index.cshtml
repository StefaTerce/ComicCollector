@page
@model ComicCollector.Pages.Collection.IndexModel
@using ComicCollector.Models
@{
    ViewData["Title"] = "La mia collezione";
}

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0"><i class="bi bi-collection me-2"></i>La mia collezione</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addComicModal">
            <i class="bi bi-plus-lg me-2"></i>Aggiungi fumetto (Manuale)
        </button>
    </div>

    @if (TempData["StatusMessage"] != null)
    {
        var isError = (bool)(TempData["IsError"] ?? false);
        var statusClass = isError ? "danger" : "success";
        <div class="alert alert-@statusClass alert-dismissible fade show mb-4" role="alert">
            @TempData["StatusMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card bg-primary text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Totale</h5>
                        <i class="bi bi-journal-richtext fs-1"></i>
                    </div>
                    <h2 class="mt-3">@Model.TotalComicsCount</h2>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card bg-success text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Serie</h5>
                        <i class="bi bi-journals fs-1"></i>
                    </div>
                    <h2 class="mt-3">@Model.SeriesCount</h2>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card bg-warning text-dark h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Autori</h5>
                        <i class="bi bi-people-fill fs-1"></i>
                    </div>
                    <h2 class="mt-3">@Model.AuthorsCount</h2>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card bg-info text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Editori</h5>
                        <i class="bi bi-building fs-1"></i>
                    </div>
                    <h2 class="mt-3">@Model.PublishersCount</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtri e ricerca -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row g-3 align-items-center">
                <div class="col-md-5">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" id="searchComics" placeholder="Cerca titolo, autore...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="seriesFilter">
                        <option value="">Tutte le serie</option>
                        @foreach (var series in Model.AllSeries.OrderBy(s => s))
                        {
                            <option value="@series.ToLower()">@series</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="publisherFilter">
                        <option value="">Tutti gli editori</option>
                        @foreach (var publisher in Model.AllPublishers.OrderBy(p => p))
                        {
                            <option value="@publisher.ToLower()">@publisher</option>
                        }
                    </select>
                </div>
                <div class="col-md-1">
                    <button class="btn btn-outline-secondary w-100" id="resetFilters" title="Reset filtri">
                        <i class="bi bi-arrow-clockwise"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Griglia dei fumetti -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4" id="comicsGrid">
        @foreach (var comic in Model.UserComics)
        {
            <div class="col comic-item"
                 data-title="@(comic.Title?.ToLower() ?? "")"
                 data-series="@(comic.Series?.ToLower() ?? "")"
                 data-publisher="@(comic.Publisher?.ToLower() ?? "")"
                 data-author="@(comic.Author?.ToLower() ?? "")">
                <div class="card h-100 shadow-sm">
                    <div class="position-relative">
                        @if (!string.IsNullOrEmpty(comic.CoverImage))
                        {
                            <img src="@comic.CoverImage" class="card-img-top" alt="@comic.Title" style="height: 250px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="bg-light text-center d-flex align-items-center justify-content-center" style="height: 250px;">
                                <div>
                                    <i class="bi bi-journal-richtext fs-1 text-muted"></i>
                                    <p class="text-muted small">No Cover</p>
                                </div>
                            </div>
                        }
                        @if (comic.IssueNumber.HasValue && comic.IssueNumber > 0)
                        {
                            <span class="position-absolute top-0 end-0 badge bg-dark m-2">N. @comic.IssueNumber</span>
                        }
                        <span class="position-absolute top-0 start-0 badge @(comic.Source == "ComicVine" ? "bg-info text-dark" : comic.Source == "MangaDex" ? "bg-warning text-dark" : "bg-secondary") m-2" style="font-size: 0.7rem;">@comic.Source</span>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title mb-1 text-truncate" title="@comic.Title">@comic.Title</h5>
                        <p class="card-text text-muted small mb-1 text-truncate" title="@comic.Series">@comic.Series</p>
                        <p class="card-text small text-truncate mb-2" title="@comic.Author"><i class="bi bi-person"></i> @comic.Author</p>

                        <div class="mt-auto">
                            <div class="d-flex justify-content-between align-items-center small text-muted mb-2">
                                <span>@comic.Publisher</span>
                                <span>@comic.PublicationDate.ToString("MMM yyyy")</span>
                            </div>
                            <div class="btn-group w-100">
                                <button class="btn btn-sm btn-outline-primary" onclick="fetchComicDetails(@comic.ComicCollectorId)">
                                    <i class="bi bi-eye"></i> Dettagli
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="confirmDeleteComic('@comic.ComicCollectorId')">
                                    <i class="bi bi-trash"></i> Rimuovi
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal Modifica Fumetto -->
                <div class="modal fade" id="editComicModal-@comic.ComicCollectorId" tabindex="-1" aria-labelledby="editComicModalLabel-@comic.ComicCollectorId" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <form method="post" asp-page-handler="UpdateComic">
                                @Html.AntiForgeryToken()
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editComicModalLabel-@comic.ComicCollectorId">Modifica: @comic.Title</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <input type="hidden" name="ComicCollectorId" value="@comic.ComicCollectorId">
                                    <input type="hidden" name="Source" value="@comic.Source">
                                    <input type="hidden" name="SourceId" value="@comic.SourceId">
                                    <input type="hidden" name="CreatedAt" value="@comic.CreatedAt.ToString("o")"> {/* Formato ISO 8601 per preservare il tipo DateTime */}

                                    <div class="row">
                                        <div class="col-md-8 mb-3">
                                            <label asp-for="@comic.Title" class="form-label">Titolo</label>
                                            <input type="text" class="form-control" name="Title" value="@comic.Title" required>
                                        </div>
                                        <div class="col-md-4 mb-3">
                                            <label asp-for="@comic.IssueNumber" class="form-label">Numero Albo</label>
                                            <input type="number" class="form-control" name="IssueNumber" value="@comic.IssueNumber">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="@comic.Series" class="form-label">Serie</label>
                                        <input type="text" class="form-control" name="Series" value="@comic.Series" required>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-7 mb-3">
                                            <label asp-for="@comic.Author" class="form-label">Autore/i</label>
                                            <input type="text" class="form-control" name="Author" value="@comic.Author" required>
                                        </div>
                                        <div class="col-md-5 mb-3">
                                            <label asp-for="@comic.PublicationDate" class="form-label">Data Pubblicazione</label>
                                            <input type="date" class="form-control" name="PublicationDate" value="@comic.PublicationDate.ToString("yyyy-MM-dd")" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-7 mb-3">
                                            <label asp-for="@comic.Publisher" class="form-label">Editore</label>
                                            <input type="text" class="form-control" name="Publisher" value="@comic.Publisher">
                                        </div>
                                        <div class="col-md-5 mb-3">
                                            <label asp-for="@comic.PageCount" class="form-label">Numero Pagine</label>
                                            <input type="number" class="form-control" name="PageCount" value="@comic.PageCount">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="@comic.CoverImage" class="form-label">URL Copertina</label>
                                        <input type="url" class="form-control" name="CoverImage" value="@comic.CoverImage">
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="@comic.Description" class="form-label">Descrizione</label>
                                        <textarea class="form-control" name="Description" rows="3">@comic.Description</textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="@comic.Notes" class="form-label">Note Personali</label>
                                        <textarea class="form-control" name="Notes" rows="2">@comic.Notes</textarea>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                                    <button type="submit" class="btn btn-primary"><i class="bi bi-save"></i> Salva Modifiche</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model.TotalComicsCount == 0)
        {
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-journal-x display-1 text-muted mb-3"></i>
                        <h3>Nessun fumetto nella collezione</h3>
                        <p class="text-muted">Inizia ad aggiungere fumetti manualmente o dalla sezione "Scopri"!</p>
                        <button class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addComicModal">
                            <i class="bi bi-plus-lg me-2"></i>Aggiungi fumetto (Manuale)
                        </button>
                        <a asp-page="/Discover/Index" class="btn btn-info mt-3">
                            <i class="bi bi-search me-2"></i>Vai a Scopri
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination Controls -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mt-5">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-p="@(Model.CurrentPage - 1)" aria-label="Precedente">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="visually-hidden">Precedente</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true" aria-label="Precedente">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="visually-hidden">Precedente</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-p="@i">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-p="@(Model.CurrentPage + 1)" aria-label="Successivo">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="visually-hidden">Successivo</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true" aria-label="Successivo">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="visually-hidden">Successivo</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<!-- Modal Dettagli Fumetto (Generic) -->
<div class="modal fade" id="comicDetailsModal" tabindex="-1" aria-labelledby="comicDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="comicDetailsModalLabel">Dettagli Fumetto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4 text-center">
                        <img id="modalComicCoverImage" src="/images/placeholder_cover.png" class="img-fluid rounded mb-3" alt="Copertina" style="max-height: 300px; object-fit: contain;">
                    </div>
                    <div class="col-md-8">
                        <h3 id="modalComicTitle"></h3>
                        <p class="text-muted">
                            <span id="modalComicSeries"></span>
                            <span id="modalComicIssue"></span>
                        </p>
                        <dl class="row">
                            <dt class="col-sm-4">Autore:</dt>
                            <dd class="col-sm-8" id="modalComicAuthor"></dd>

                            <dt class="col-sm-4">Editore:</dt>
                            <dd class="col-sm-8" id="modalComicPublisher"></dd>

                            <dt class="col-sm-4">Data Pubblicazione:</dt>
                            <dd class="col-sm-8" id="modalComicPublicationDate"></dd>

                            <dt class="col-sm-4">Pagine:</dt>
                            <dd class="col-sm-8" id="modalComicPageCount"></dd>

                            <dt class="col-sm-4">Fonte Dati:</dt>
                            <dd class="col-sm-8"><span id="modalComicSource"></span> <span id="modalComicSourceIdInfo"></span></dd>
                            
                            <dt class="col-sm-4">Aggiunto il:</dt>
                            <dd class="col-sm-8" id="modalComicCreatedAt"></dd>

                            <dt class="col-sm-4">Ultima Modifica:</dt>
                            <dd class="col-sm-8" id="modalComicUpdatedAt"></dd>
                        </dl>
                    </div>
                </div>

                <div class="mt-3">
                    <h5><i class="bi bi-robot me-1"></i>Approfondimenti IA (Gemini)</h5>
                    <div id="geminiReviewContent" class="p-3 bg-light border rounded">
                        <p id="modalGeminiReviewSummary">Caricamento recensione...</p>
                    </div>
                    <small id="modalEnrichmentStatus" class="text-muted"></small>
                </div>
            </div>
            <div class="modal-footer">
                 <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Chiudi</button>
                 <!-- Future: Add Edit/Delete buttons here if needed, passing comicId -->
            </div>
        </div>
    </div>
</div>

<!-- Modal per aggiungere un fumetto manualmente -->
<div class="modal fade" id="addComicModal" tabindex="-1" aria-labelledby="addComicModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddComic">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="addComicModalLabel">Aggiungi Nuovo Fumetto (Manuale)</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Source" value="Local">
                    <div class="row">
                        <div class="col-md-8 mb-3">
                            <label for="newComicTitle" class="form-label">Titolo</label>
                            <input type="text" class="form-control" id="newComicTitle" name="Title" required>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="newComicIssueNumber" class="form-label">Numero Albo</label>
                            <input type="number" class="form-control" id="newComicIssueNumber" name="IssueNumber">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="newComicSeries" class="form-label">Serie</label>
                        <input type="text" class="form-control" id="newComicSeries" name="Series" required>
                    </div>
                    <div class="row">
                        <div class="col-md-7 mb-3">
                            <label for="newComicAuthor" class="form-label">Autore/i</label>
                            <input type="text" class="form-control" id="newComicAuthor" name="Author" required>
                        </div>
                        <div class="col-md-5 mb-3">
                            <label for="newComicPublicationDate" class="form-label">Data Pubblicazione</label>
                            <input type="date" class="form-control" id="newComicPublicationDate" name="PublicationDate" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7 mb-3">
                            <label for="newComicPublisher" class="form-label">Editore</label>
                            <input type="text" class="form-control" id="newComicPublisher" name="Publisher">
                        </div>
                        <div class="col-md-5 mb-3">
                            <label for="newComicPageCount" class="form-label">Numero Pagine</label>
                            <input type="number" class="form-control" id="newComicPageCount" name="PageCount">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="newComicCoverImage" class="form-label">URL Copertina</label>
                        <input type="url" class="form-control" id="newComicCoverImage" name="CoverImage" placeholder="https://esempio.com/copertina.jpg">
                    </div>
                    <div class="mb-3">
                        <label for="newComicDescription" class="form-label">Descrizione</label>
                        <textarea class="form-control" id="newComicDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="newComicNotes" class="form-label">Note Personali</label>
                        <textarea class="form-control" id="newComicNotes" name="Notes" rows="2"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <button type="submit" class="btn btn-primary"><i class="bi bi-plus-circle"></i> Aggiungi Fumetto</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Form nascosto per eliminazione -->
<form id="deleteComicForm" method="post" asp-page-handler="DeleteComic">
    @Html.AntiForgeryToken()
    <input type="hidden" id="comicIdToDeleteInput" name="comicIdToDelete" />
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function confirmDeleteComic(comicId) {
            if (confirm('Sei sicuro di voler rimuovere questo fumetto dalla tua collezione? L\'azione è irreversibile.')) {
                document.getElementById('comicIdToDeleteInput').value = comicId;
                document.getElementById('deleteComicForm').submit();
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchComics');
            const seriesSelect = document.getElementById('seriesFilter');
            const publisherSelect = document.getElementById('publisherFilter');
            const resetButton = document.getElementById('resetFilters');
            const comicItems = document.querySelectorAll('#comicsGrid .comic-item');

            function applyFilters() {
                const searchTerm = searchInput ? searchInput.value.toLowerCase() : "";
                const selectedSeries = seriesSelect ? seriesSelect.value.toLowerCase() : "";
                const selectedPublisher = publisherSelect ? publisherSelect.value.toLowerCase() : "";

                comicItems.forEach(item => {
                    const title = item.dataset.title;
                    const series = item.dataset.series;
                    const publisher = item.dataset.publisher;
                    const author = item.dataset.author;

                    const matchesSearch = !searchTerm || title.includes(searchTerm) || author.includes(searchTerm);
                    const matchesSeries = !selectedSeries || series === selectedSeries;
                    const matchesPublisher = !selectedPublisher || publisher === selectedPublisher;

                    if (matchesSearch && matchesSeries && matchesPublisher) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            }

            if(searchInput) searchInput.addEventListener('input', applyFilters);
            if(seriesSelect) seriesSelect.addEventListener('change', applyFilters);
            if(publisherSelect) publisherSelect.addEventListener('change', applyFilters);

            if(resetButton) resetButton.addEventListener('click', function() {
                if(searchInput) searchInput.value = '';
                if(seriesSelect) seriesSelect.value = '';
                if(publisherSelect) publisherSelect.value = '';
                applyFilters();
            });
        });

        function fetchComicDetails(comicId) {
            // Reset modal content before fetching new data
            $('#comicDetailsModalLabel').text('Dettagli Fumetto');
            $('#modalComicCoverImage').attr('src', '/images/placeholder_cover.png');
            $('#modalComicTitle').text('');
            $('#modalComicSeries').text('');
            $('#modalComicIssue').text('');
            $('#modalComicAuthor').text('');
            $('#modalComicPublisher').text('');
            $('#modalComicPublicationDate').text('');
            $('#modalComicPageCount').text('');
            $('#modalComicSource').text('');
            $('#modalComicSourceIdInfo').text('');
            $('#modalComicCreatedAt').text('');
            $('#modalComicUpdatedAt').text('');
            $('#modalComicDescription').html('');
            $('#modalComicNotes').text('');
            $('#modalGeminiReviewSummary').text('Caricamento recensione...');
            $('#modalEnrichmentStatus').text('');
            // Clear previous styling for Gemini content
            $('#geminiReviewContent').html('<p id="modalGeminiReviewSummary">Caricamento recensione...</p>');

            $.ajax({
                url: `/Collection/Index?handler=ComicDetailsWithGemini&comicId=${comicId}`,
                method: 'GET',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (data) {
                    var comicToDisplay = data.comic || data;
                    var errorMessage = data.error;

                    $('#comicDetailsModalLabel').text('Dettagli: ' + (comicToDisplay.title || 'Fumetto'));
                    $('#modalComicCoverImage').attr('src', comicToDisplay.coverImage || '/images/placeholder_cover.png').on('error', function() { $(this).attr('src', '/images/placeholder_cover.png'); });
                    $('#modalComicTitle').text(comicToDisplay.title || 'N/A');
                    $('#modalComicSeries').text(comicToDisplay.series || 'N/A');
                    if (comicToDisplay.issueNumber && parseInt(comicToDisplay.issueNumber) > 0) {
                        $('#modalComicIssue').text(' #' + comicToDisplay.issueNumber);
                    } else {
                        $('#modalComicIssue').text('');
                    }
                    $('#modalComicAuthor').text(comicToDisplay.author || 'N/A');
                    $('#modalComicPublisher').text(comicToDisplay.publisher || 'N/A');
                    $('#modalComicPublicationDate').text(comicToDisplay.publicationDate ? new Date(comicToDisplay.publicationDate).toLocaleDateString() : 'N/A');
                    $('#modalComicPageCount').text(comicToDisplay.pageCount || 'N/A');
                    
                    $('#modalComicSource').text(comicToDisplay.source || 'N/A');
                    if (comicToDisplay.sourceId) {
                        $('#modalComicSourceIdInfo').text('(ID: ' + comicToDisplay.sourceId + ')');
                    } else {
                        $('#modalComicSourceIdInfo').text('');
                    }
                    $('#modalComicCreatedAt').text(comicToDisplay.createdAt ? new Date(comicToDisplay.createdAt).toLocaleString() : 'N/A');
                    $('#modalComicUpdatedAt').text(comicToDisplay.updatedAt ? new Date(comicToDisplay.updatedAt).toLocaleString() : 'N/A');

                    $('#modalComicDescription').html(comicToDisplay.description ? comicToDisplay.description.replace(/\n/g, '<br>') : 'Nessuna descrizione.');
                    $('#modalComicNotes').text(comicToDisplay.notes || 'Nessuna nota.');

                    if (errorMessage) {
                        $('#modalGeminiReviewSummary').html(`<p class="text-danger">${comicToDisplay.geminiReviewSummary || 'Errore nel recupero della recensione.'}</p>`);
                        $('#modalEnrichmentStatus').text(errorMessage);
                    } else {
                        let reviewHtml = '<p>Recensione non disponibile o API Key non configurata.</p>';
                        if (comicToDisplay.geminiReviewSummary) {
                            // Basic parsing for Positive/Negative traits for styling
                            // This is a simplified parser. For more complex HTML, a more robust solution would be needed.
                            let summary = comicToDisplay.geminiReviewSummary.replace(/\n/g, '<br>');
                            summary = summary.replace(/Positive Traits:/gi, '<strong class="text-success">Positive Traits:</strong>');
                            summary = summary.replace(/Negative Traits:/gi, '<strong class="text-danger">Negative Traits:</strong>');
                            summary = summary.replace(/\* (.*?)(<br>|$)/gi, '<ul class="list-unstyled ps-3"><li class="mb-1"><i class="bi bi-check-circle-fill text-success me-2"></i>$1</li></ul>'); // Basic positive bullet
                            // Need to refine bullet logic if positive/negative bullets need different icons or styling based on section
                            // For now, this is a general approach. A more specific approach would parse sections.

                            // Attempt to differentiate positive and negative bullets if possible by context (very basic)
                            let sections = comicToDisplay.geminiReviewSummary.split(/Negative Traits:|Positive Traits:/gi);
                            let formattedSummary = '';
                            if (comicToDisplay.geminiReviewSummary.includes("Positive Traits:")) {
                                formattedSummary += '<h6 class="text-success"><i class="bi bi-hand-thumbs-up-fill me-1"></i>Positive Traits:</h6>';
                                let positiveSection = sections.find(s => comicToDisplay.geminiReviewSummary.indexOf(s) < comicToDisplay.geminiReviewSummary.indexOf("Negative Traits:") && s.trim().length > 0);
                                if (!positiveSection && sections.length > 1 && comicToDisplay.geminiReviewSummary.indexOf("Positive Traits:") < (comicToDisplay.geminiReviewSummary.indexOf("Negative Traits:") > -1 ? comicToDisplay.geminiReviewSummary.indexOf("Negative Traits:") : Infinity) ) {
                                   positiveSection = sections[1]; // Assuming first section after "Positive Traits:"
                                }
                                if (positiveSection) {
                                    formattedSummary += '<ul class="list-unstyled ps-3">';
                                    positiveSection.trim().split(/\n|\* /).forEach(item => {
                                        if (item.trim()) formattedSummary += `<li class="mb-1"><i class="bi bi-check-circle-fill text-success me-2"></i>${item.trim()}</li>`;
                                    });
                                    formattedSummary += '</ul>';
                                }
                            }

                            if (comicToDisplay.geminiReviewSummary.includes("Negative Traits:")) {
                                formattedSummary += '<h6 class="text-danger mt-3"><i class="bi bi-hand-thumbs-down-fill me-1"></i>Negative Traits:</h6>';
                                let negativeSection = sections.find(s => comicToDisplay.geminiReviewSummary.indexOf(s) > comicToDisplay.geminiReviewSummary.indexOf("Negative Traits:") && s.trim().length > 0);
                                 if (!negativeSection && sections.length > 0 && comicToDisplay.geminiReviewSummary.indexOf("Negative Traits:") > -1 ) {
                                   negativeSection = sections[sections.length-1]; // Assuming last section after "Negative Traits:"
                                }
                                if (negativeSection) {
                                    formattedSummary += '<ul class="list-unstyled ps-3">';
                                    negativeSection.trim().split(/\n|\* /).forEach(item => {
                                        if (item.trim()) formattedSummary += `<li class="mb-1"><i class="bi bi-x-circle-fill text-danger me-2"></i>${item.trim()}</li>`;
                                    });
                                    formattedSummary += '</ul>';
                                }
                            }
                             if (!formattedSummary && comicToDisplay.geminiReviewSummary) { // Fallback for non-structured text
                                formattedSummary = comicToDisplay.geminiReviewSummary.replace(/\n/g, '<br>');
                            }

                            reviewHtml = formattedSummary || comicToDisplay.geminiReviewSummary.replace(/\n/g, '<br>');
                        }
                        $('#geminiReviewContent').html(reviewHtml);

                        if (comicToDisplay.wasEnriched) {
                            $('#modalEnrichmentStatus').text('Alcuni dati sono stati aggiornati da Gemini.');
                        } else {
                            $('#modalEnrichmentStatus').text('Nessun dato aggiuntivo da Gemini o dati già completi.');
                        }
                    }

                    $('#comicDetailsModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error('Errore nel recupero dei dettagli del fumetto:', error, xhr.responseText);
                    $('#modalGeminiReviewSummary').text('Errore AJAX nel caricare i dettagli.');
                    $('#modalEnrichmentStatus').text('Consultare la console per dettagli sull\'errore.');
                    $('#comicDetailsModal').modal('show'); // Mostra il modale anche in caso di errore per visualizzare il messaggio
                }
            });
        }
    </script>
}